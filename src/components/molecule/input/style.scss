@import '@/styles/utils/mixins';

.hb-input {
  @include host-styled {
    display: flex;
    min-height: var(--husc__input__minHeight);
    max-height: var(--husc__input__maxHeight);
    align-items: center;
    color: var(--husc__black--800);
    padding: var(--husc__input__padding__top) var(--husc__input__padding__right)
      var(--husc__input__padding__bottom) var(--husc__input__padding__left);
    cursor: text;
    font-family: var(--husc__font__family);
    border: var(--husc__input__border__width) solid var(--husc__input__border__color);
    box-sizing: border-box;
    transition: border-color var(--husc__transition__duration--ms);
    border-radius: calc(var(--husc__border__radius) * 2);
    background: var(--husc__background__color);
  }
  @include host-styled('[error]') {
    padding-left: calc(
      var(--husc__input__padding__left) -
        (var(--husc__input__border__width--error) - var(--husc__input__border__width))
    );
    padding-right: calc(
      var(--husc__input__padding__right) -
        (var(--husc__input__border__width--error) - var(--husc__input__border__width))
    );
    padding-top: calc(
      var(--husc__input__padding__top) -
        (var(--husc__input__border__width--error) - var(--husc__input__border__width))
    );
    padding-bottom: calc(
      var(--husc__input__padding__bottom) -
        (var(--husc__input__border__width--error) - var(--husc__input__border__width))
    );
    border-width: var(--husc__input__border__width--error);
    border-color: var(--husc__input__border__color--error);
    // background: var(--husc__background__color);
  }
  @include host-styled(':focus:not([error])') {
    padding-left: calc(
      var(--husc__input__padding__left) -
        (var(--husc__input__border__width--focus) - var(--husc__input__border__width))
    );
    padding-right: calc(
      var(--husc__input__padding__right) -
        (var(--husc__input__border__width--focus) - var(--husc__input__border__width))
    );
    padding-top: calc(
      var(--husc__input__padding__top) -
        (var(--husc__input__border__width--focus) - var(--husc__input__border__width))
    );
    padding-bottom: calc(
      var(--husc__input__padding__bottom) -
        (var(--husc__input__border__width--focus) - var(--husc__input__border__width))
    );
    border-width: var(--husc__input__border__width--focus);
    border-color: var(--husc__input__border__color--focus);
    // background: var(--husc__background__color);
  }
  @include host-styled(':disabled') {
    border-color: var(--husc__input__border__color--disabled);
    background: var(--husc__input__border__color--disabled);
    --husc__background__color: var(--husc__input__border__color--disabled);
  }
  &__el {
    width: 0;
    flex: 1;
    height: 100%;
    padding: 0;
    font-weight: inherit;
    color: inherit;
    font-size: var(--husc__input__font__size);
    line-height: 1.3;
    box-sizing: border-box;
    border: 0;
    text-align: inherit;
    outline: none;
    word-break: break-all;
    cursor: inherit;
    resize: none;
    font-family: var(--husc__font__family);
    box-shadow: 0 0 0 999px var(--husc__background__color) inset;
    background: inherit;
    &::placeholder {
      color: var(--husc__input__font__color--placeholder);
    }
    //   box-shadow: 0 0 0 999px #{$hb-input__background--warning} inset;
    // }
  }
  &__slot {
    display: inline-flex;
    flex: 0 0 auto;
  }
}
