{"version":3,"file":"components-molecule-tooltip-index-stories.b9a50c7d.iframe.bundle.js","mappings":";;;;;;;AA6CA","sources":["webpack://heybit-ui-styled-components/./src/components/molecule/tooltip/index.ts"],"sourcesContent":["import '@/components/atom/icon';\nimport { Base } from '@/components/base';\nimport { html } from 'lit';\nimport { customElement } from 'lit/decorators.js';\n\n/**\n * @slot front, 오프너\n * @csspart front\n * @csspart content\n */\n\n@customElement('hb-tooltip')\nexport class HbTooltip extends Base {\n  static get styles() {\n    return [require('./style.scss').default];\n  }\n\n  open: boolean = false;\n\n  static get properties() {\n    return {\n      open: { type: Boolean, Reflect: true },\n      width: { type: Number, Reflect: true },\n      height: { type: Number, Reflect: true },\n      position: { type: Array, Reflect: true }\n    };\n  }\n\n  async connectedCallback() {\n    await super.connectedCallback();\n    this.tabindex = '0';\n    this.onmouseleave = () => this.hasAttribute('open') && this.removeAttribute('open');\n    this.onblur = () => this.hasAttribute('open') && this.removeAttribute('open');\n  }\n\n  disconnectedCallback() {\n    this.onmouseleave = () => null;\n    this.onblur = () => null;\n  }\n\n  render() {\n    return html`\n      <slot name=\"front\" part=\"front\" class=\"hb-tooltip__front\"></slot>\n      <slot part=\"content\" class=\"hb-tooltip__content\"></slot>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'hb-tooltip': HbTooltip;\n  }\n}\n"],"names":[],"sourceRoot":""}