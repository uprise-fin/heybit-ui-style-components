{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/components/hb-dialog/index.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,IAAI,MAAM,SAAS,CAAC;AAC3B,OAAO,EAAC,IAAI,EAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAC,aAAa,EAAE,QAAQ,EAAC,MAAM,mBAAmB,CAAC;AAC1D,OAAO,EAAC,UAAU,EAAC,MAAM,aAAa,CAAC;AACvC,OAAO,KAAK,MAAM,gCAAgC,CAAC;AAEnD;;;;;;;;;;;GAWG;AAGH,IAAa,QAAQ,GAArB,MAAa,QAAS,SAAQ,IAAI;IAChC,MAAM,KAAc,MAAM;QACxB,OAAO,CAAC,KAAK,CAAC,CAAC;IACjB,CAAC;IAKQ,MAAM;QACb,OAAO,IAAI,CAAA;;;;;;;;;;;;;KAaV,CAAC;IACJ,CAAC;IACQ,iBAAiB;QACxB,KAAK,CAAC,iBAAiB,EAAE,CAAC;QAC1B,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IACD,KAAK,CAAC,SAAS;QACb,6BAA6B;QAC7B,MAAM,MAAM,GAAG,MAAM,UAAU,CAAiB,IAAI,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;QACzE,MAAM,UAAU,GAAG,MAAM,UAAU,CACjC,IAAI,CAAC,UAAU,EACf,WAAW,CACZ,CAAC;QACF,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClB,MAAO,CAAC,gBAAgB,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACzD,MAAO,CAAC,cAAc,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC;QACrD,UAAW,CAAC,OAAO,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;IAC5C,CAAC;IACD,gBAAgB;QACd,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;IAClC,CAAC;IACD,cAAc;QACZ,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;IACrC,CAAC;IACD,MAAM;QACJ,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IAC7B,CAAC;IACD,MAAM;QACJ,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QAChC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;IAChC,CAAC;CACF,CAAA;AA/CC;IADC,QAAQ,EAAE;uCACI;AANJ,QAAQ;IADpB,aAAa,CAAC,WAAW,CAAC;GACd,QAAQ,CAqDpB;SArDY,QAAQ;AA4DrB,kDAAkD;AAClD,4BAA4B;AAC5B,8BAA8B;AAC9B,2BAA2B;AAC3B,YAAY;AACZ,oCAAoC;AACpC,6CAA6C;AAC7C,iDAAiD;AACjD,uBAAuB;AACvB,gBAAgB;AAChB,mCAAmC;AACnC,0BAA0B;AAC1B,aAAa;AACb,WAAW;AACX,wBAAwB;AACxB,mBAAmB;AACnB,UAAU;AACV,oCAAoC;AACpC,qCAAqC;AACrC,0EAA0E;AAC1E,sEAAsE;AACtE,2DAA2D;AAC3D,UAAU;AACV,6BAA6B;AAC7B,iDAAiD;AACjD,0CAA0C;AAC1C,kCAAkC;AAClC,UAAU;AACV,yBAAyB;AACzB,iDAAiD;AACjD,sCAAsC;AACtC,kCAAkC;AAClC,UAAU;AAEV,mBAAmB;AACnB,qEAAqE;AACrE,0BAA0B;AAC1B,UAAU;AACV,QAAQ;AACR,OAAO","sourcesContent":["import Base from '../base';\nimport {html} from 'lit';\nimport {customElement, property} from 'lit/decorators.js';\nimport {getElement} from '../../utils';\nimport style from '../../styles/dialog/index.scss';\n\n/**\n * An example element.\n *\n * @fires input 입력할때\n * @fires change 값이 변경될때 발생\n * @property value 기본 값\n * @slot slot--left - optional, 왼쪽 영역(아이콘)\n * @slot slot--right - optional, 오른쪽 영역(버튼)\n * @csspart slot--left\n * @csspart border\n * @csspart slot--right\n */\n\n@customElement('hb-dialog')\nexport class HbDialog extends Base {\n  static override get styles() {\n    return [style];\n  }\n\n  @property()\n  value!: string;\n\n  override render() {\n    return html`\n      <div class=\"hb-dialog__wrap\" id=\"wrap\">\n        <div class=\"hb-dialog__container\" part=\"container\">\n          <button\n            class=\"hb-dialog__close-btn\"\n            part=\"close-btn\"\n            id=\"close-btn\"\n          ></button>\n          <slot name=\"header\" part=\"header\" class=\"hb-dialog__header\"></slot>\n          <slot name=\"content\" part=\"content\" class=\"hb-dialog__content\"></slot>\n          <slot name=\"footer\" part=\"footer\" class=\"hb-dialog__footer\"></slot>\n        </div>\n      </div>\n    `;\n  }\n  override connectedCallback() {\n    super.connectedCallback();\n    this.bindEvent();\n  }\n  async bindEvent() {\n    // const a = this.shadowRoot;\n    const wrapEl = await getElement<HTMLDivElement>(this.shadowRoot, 'wrap');\n    const closeBtnEl = await getElement<HTMLButtonElement>(\n      this.shadowRoot,\n      'close-btn'\n    );\n    console.log(this);\n    wrapEl!.onanimationstart = () => this.onAnimationStart();\n    wrapEl!.onanimationend = () => this.onAnimationEnd();\n    closeBtnEl!.onclick = () => this.onHide();\n  }\n  onAnimationStart() {\n    this.classList.add('animation');\n  }\n  onAnimationEnd() {\n    this.classList.remove('animation');\n  }\n  onShow() {\n    this.classList.add('open');\n  }\n  onHide() {\n    this.classList.add('animation');\n    this.classList.remove('open');\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'hb-dialog': HbDialog;\n  }\n}\n// import CustomElement from \"../custom-elements\";\n// const NAME = \"hb-dialog\";\n// customElements.get(NAME) ||\n//   customElements.define(\n//     NAME,\n//     class extends CustomElement {\n//       template = require(`./${NAME}.hbs`);\n//       css = require(`./${NAME}.scss`).default;\n//       properties = {\n//         id: {\n//           closeBtn: \"close-btn\",\n//           wrap: \"wrap\",\n//         },\n//       };\n//       constructor() {\n//         super();\n//       }\n//       connectedCallback(): void {\n//         super.connectedCallback();\n//         this.isWrapEl.onanimationstart = () => this.onAnimationStart();\n//         this.isWrapEl.onanimationend = () => this.onAnimationEnd();\n//         this.isCloseBtnEl.onclick = () => this.onHide();\n//       }\n//       get isCloseBtnEl() {\n//         return this.shadowRoot.getElementById(\n//           this.isProperties.id.closeBtn\n//         ) as HTMLButtonElement;\n//       }\n//       get isWrapEl() {\n//         return this.shadowRoot.getElementById(\n//           this.isProperties.id.wrap\n//         ) as HTMLButtonElement;\n//       }\n\n//       onHide() {\n//         this.classList.add(this.isProperties.classList.animation);\n//         super.onHide();\n//       }\n//     }\n//   );\n"]}