{"version":3,"file":"my-element_test.js","sourceRoot":"","sources":["../../src/test/my-element_test.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AAIH,OAAO,EAAC,OAAO,EAAE,MAAM,EAAC,MAAM,kBAAkB,CAAC;AACjD,OAAO,EAAC,IAAI,EAAC,MAAM,oBAAoB,CAAC;AAExC,KAAK,CAAC,WAAW,EAAE,GAAG,EAAE;IACtB,IAAI,CAAC,iBAAiB,EAAE,KAAK,IAAI,EAAE;QACjC,MAAM,EAAE,GAAG,CAAC,MAAM,OAAO,CAAC,IAAI,CAAA,yBAAyB,CAAC,CAAa,CAAC;QACtE,MAAM,EAAE,CAAC,cAAc,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC;IAC3D,CAAC,CAAC,CAAC;IACH,IAAI,CAAC,6BAA6B,EAAE,KAAK,IAAI,EAAE;QAC7C,MAAM,EAAE,GAAG,CAAC,MAAM,OAAO,CACvB,IAAI,CAAA,sCAAsC,CAC3C,CAAa,CAAC;QACf,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC;QAC3B,MAAM,EAAE,CAAC,cAAc,CAAC;QACxB,8BAA8B;QAC9B,uDAAuD;QACvD,kBAAkB;IACpB,CAAC,CAAC,CAAC;IAEH,gDAAgD;IAChD,yEAAyE;IACzE,4BAA4B;IAC5B,UAAU;IACV,QAAQ;IACR,4BAA4B;IAC5B,oDAAoD;IACpD,oBAAoB;IACpB,MAAM;IACN,OAAO;IACP,MAAM;IAEN,wCAAwC;IACxC,4EAA4E;IAC5E,4DAA4D;IAC5D,oBAAoB;IACpB,6BAA6B;IAC7B,4BAA4B;IAC5B,UAAU;IACV,QAAQ;IACR,6BAA6B;IAC7B,oDAAoD;IACpD,oBAAoB;IACpB,MAAM;IACN,OAAO;IACP,MAAM;IAEN,wCAAwC;IACxC,4EAA4E;IAC5E,6BAA6B;IAC7B,2DAA2D;IAC3D,MAAM;AACR,CAAC,CAAC,CAAC","sourcesContent":["/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {HbSelect} from '../components/hb-select';\n\nimport {fixture, assert} from '@open-wc/testing';\nimport {html} from 'lit/static-html.js';\n\nsuite('hb-select', () => {\n  test('styling applied', async () => {\n    const el = (await fixture(html`<hb-select></hb-select>`)) as HbSelect;\n    await el.updateComplete;\n    assert.equal(getComputedStyle(el).visibility, 'visible');\n  });\n  test('renders with default values', async () => {\n    const el = (await fixture(\n      html`<hb-select class=\"open\"></hb-select>`\n    )) as HbSelect;\n    console.log(el.shadowRoot);\n    await el.updateComplete;\n    // console.log(el.shadowRoot);\n    // const button = el.shadowRoot?.querySelector('div')!;\n    // button.click();\n  });\n\n  // test('renders with a set name', async () => {\n  //   const el = await fixture(html`<hb-select name=\"Test\"></hb-select>`);\n  //   assert.shadowDom.equal(\n  //     el,\n  //     `\n  //     <h1>Hello, Test!</h1>\n  //     <button part=\"button\">Click Count: 0</button>\n  //     <slot></slot>\n  //   `\n  //   );\n  // });\n\n  // test('handles a click', async () => {\n  //   const el = (await fixture(html`<hb-select></hb-select>`)) as MyElement;\n  //   const button = el.shadowRoot!.querySelector('button')!;\n  //   button.click();\n  //   await el.updateComplete;\n  //   assert.shadowDom.equal(\n  //     el,\n  //     `\n  //     <h1>Hello, World!</h1>\n  //     <button part=\"button\">Click Count: 1</button>\n  //     <slot></slot>\n  //   `\n  //   );\n  // });\n\n  // test('styling applied', async () => {\n  //   const el = (await fixture(html`<hb-select></hb-select>`)) as MyElement;\n  //   await el.updateComplete;\n  //   assert.equal(getComputedStyle(el).paddingTop, '16px');\n  // });\n});\n"]}